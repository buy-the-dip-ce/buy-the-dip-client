import { Component, JSX } from 'solid-js';
import type { RouteUpdateSignal, RouterUtils, RouteRenderFunction, RouterState, RouterIntegration } from './types';
export interface LinkProps extends JSX.AnchorHTMLAttributes<HTMLAnchorElement> {
    href: string;
    noResolve?: boolean;
}
export declare function Link(props: LinkProps): JSX.Element;
export interface NavLinkProps extends LinkProps {
    activeClass?: string;
    end?: boolean;
}
export declare function NavLink(props: NavLinkProps): JSX.Element;
export interface RedirectProps {
    href: ((router: RouterState) => string) | string;
    noResolve?: boolean;
}
export declare function Redirect(props: RedirectProps): null;
export interface MatchRouteProps {
    path?: string;
    end?: boolean;
    children: RouteRenderFunction | JSX.Element;
}
export declare function MatchRoute(props: MatchRouteProps): JSX.Element;
export interface RouteProps extends MatchRouteProps {
    component?: Component<{
        when: boolean;
        children: JSX.Element;
    }>;
}
export declare function Route(props: RouteProps): JSX.Element;
export interface RouterProps {
    integration?: RouterIntegration | RouteUpdateSignal;
    basePath?: string;
    utils?: Partial<RouterUtils>;
    children: JSX.Element;
}
export declare function Router(props: RouterProps): JSX.Element;
