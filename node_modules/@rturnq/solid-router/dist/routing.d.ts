import { createMatcher, parseQuery, resolvePath, renderPath } from './utils';
import type { RouteUpdateSignal, RouteState, RouterState, RouterUtils, RouteMatch, RouterIntegration } from './types';
export declare const RouterContext: import("solid-js").Context<RouterState | undefined>;
export declare const RouteContext: import("solid-js").Context<RouteState | undefined>;
export declare const useRouter: () => RouterState;
export declare const useRoute: () => RouteState;
export declare const defaultUtils: {
    resolvePath: typeof resolvePath;
    createMatcher: typeof createMatcher;
    parseQuery: typeof parseQuery;
    renderPath: typeof renderPath;
};
export declare function createRouter(integration?: RouterIntegration | RouteUpdateSignal, basePath?: string, overrides?: Partial<RouterUtils>): RouterState;
export declare function createRoute(pattern?: string, end?: boolean): RouteState;
export declare function createRouteState(utils: RouterUtils, basePath: string, path: string, end: boolean, matchSignal: () => RouteMatch | null): RouteState;
